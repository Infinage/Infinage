# Use Ctrl + Space as tmux leader key
set-option -g prefix C-Space
bind-key C-Space send-prefix

# Start window and pane numbering at 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows when win is closed
set-option -g renumber-windows on

# Set tmux display messages visible longer
set-option -g display-time 3000

# Proper 256-color support for terminal colorschemes
set -g default-terminal "tmux-256color"
set-option -sa terminal-features ',xterm*:RGB'

# Easy config reload
bind R source-file ~/.tmux.conf \; display-message "✔ Reloaded tmux.conf"

# Use vi-style keybindings in copy and command mode
setw -g mode-keys vi
set -g status-keys vi

# Split panes like Vim
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

# Move between panes using h/j/k/l (like Vim)
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Support to send current line to top, middle & bottom
bind -T copy-mode-vi z switch-client -T multi-z
bind -T multi-z t send -X scroll-top
bind -T multi-z z send -X scroll-middle
bind -T multi-z b send -X scroll-bottom

# Jump to top, middle & bottom
bind -T copy-mode-vi H send -X top-line
bind -T copy-mode-vi M send -X middle-line
bind -T copy-mode-vi L send -X bottom-line

# Enter command prompt mode
bind-key : command-prompt

# Refresh client display
bind-key r refresh-client

# Clear scrollback history for the active pane
bind-key L clear-history

# Cycle through layouts (tiled, even, etc.)
bind-key enter next-layout

# Jump to marked panes (useful when marking a pane)
bind \` switch-client -t'{marked}'

# Rotate panes within the current window
bind-key C-o rotate-window

# Resize panes with Ctrl + {h,j,k,l}
bind -r C-j resize-pane -D 10
bind -r C-k resize-pane -U 10
bind -r C-h resize-pane -L 10
bind -r C-l resize-pane -R 10

# Quickly switch to main-horizontal or main-vertical layout
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

# Default size for “other” panes when splitting
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

# Duration (ms) for displaying pane numbers
set-window-option -g display-panes-time 1500

# Enable support for extended xterm keys
set-window-option -g xterm-keys on

# Toggle between last two panes
bind-key a last-pane

# Show pane numbers to jump directly (<prefix> + q)
bind-key q display-panes

# Create a new window
bind-key c new-window

# Move between windows with ( and )
bind-key ( previous-window
bind-key ) next-window

# Rename current window with <prefix> + ,
bind-key , command-prompt "rename-window %%"

# Start visual selection (v), block selection (Ctrl+v), and yank (y)
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe
bind-key -T copy-mode-vi Y send-keys -X copy-selection-and-cancel

# Start with status bar turned off
set -g status off

# Refresh status bar every second
set-option -g status-interval 1

# Display session name on the left
set -g status-left ' #[default]'

# Display time and date on the right
set -g status-right '#[default]Session: #S | %a %H:%M:%S %Y-%m-%d '

# Highlight windows with activity
setw -g monitor-activity on
set -g visual-activity on

# Join selected window as a horizontal/vertical split
bind | choose-window 'join-pane -h -s "%%"'
bind _ choose-window 'join-pane -s "%%"'

# Fix Home and End keys inside tmux
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"

# Disable visual bell to prevent flickering
set-option -g bell-action none
set-option -g visual-bell off

# Make tmux more responsive
set -sg escape-time 0
set-option -g repeat-time 150

# Allow system clipboard passthrough (for Vim yank/copy integration)
set -g allow-passthrough on
set -g set-clipboard on

# Disable mouse :)
set -g mouse off

# Confirm and kill current window / pane
bind-key X confirm-before -p "Kill window #W? (y/n)" kill-window
bind-key x confirm-before -p "Kill pane #P? (y/n)" kill-pane

# Hide border if only a single window exist
setw -g pane-border-format ''
set-hook -g window-linked \
    'if -F "#{==:#{session_windows},1}" \
    "setw -g pane-border-statu off; set -g status off" \
    "setw -g pane-border-status bottom; set -g status on"'
set-hook -g window-unlinked \
    'if -F "#{==:#{session_windows},1}" \
    "setw -g pane-border-statu off; set -g status off" \
    "setw -g pane-border-statu bottom; set -g status on"'
